#!/bin/bash

# Get data from .env file
source .env

## REQUIREMENTS
# Docker


# Colors
GREEN='\033[1;32m' # Green
RESET='\033[0m' # No Color


# CHECK THE PROJECT STATUS

# Default
MODE=install-starter
# 1. Check IP and Create Host *
# 2. Prepare the starter template *
# 3. Build the server *
# 4. Install the NPM packages and build the style.css file *
# 5. Do the WP job *
# 6. Print the site info *
# 7. Print the Username & Pass *
# 8. Run the GULP *


# If the starter theme doesn't exist
if [ ! -d wp-content/themes/site-name ]; then

	MODE=install-different-theme
	# 1. Check IP and Create Host*
	# 2. Build the server *
	# 3. Do the WP job *
	# 4. Print the site info *
	# 5. Print the Username & Pass *

fi


# If DB dump exists
if [ -f database/dump/*.sql ]; then

	MODE=install-existing-site
	# 1. Check IP and Create Host *
	# 2. Build the server *
	# 3. URL replace on DB !!! Coming soon
	# 4. Print the site info *

fi


# If local IP changed on .env file
if [ $IP != 127.0.0.1 ]; then

	MODE=already-installed
	# 1. Start the servers

	# If forced re-install:
	# 1. Stop and remove the current local server and domain
	# 2. Restart the installation

fi




# # CONFIRM THE SITE INFO ???
# read -ep "Domain Name (${DOMAIN}): " domain
# [ ! -z "$domain" ] && DOMAIN=$domain || echo "Using '${DOMAIN}'"

# read -ep "Website Name (${NAME}): " name
# [ ! -z "$name" ] && NAME=$name || echo "Using '${NAME}'"

# read -ep "Website Slug (${SLUG}): " slug
# [ ! -z "$slug" ] && SLUG=$slug || echo "Using '${SLUG}'"

# read -ep "Function Prefix (${PREFIX}): " prefix
# [ ! -z "$prefix" ] && PREFIX=$prefix || echo "Using '${PREFIX}'"

# read -ep "Website Tagline (${DESC}): " desc
# [ ! -z "$desc" ] && DESC=$desc || echo "Using '${DESC}'"




# IF ALREADY INSTALLED
if [ $MODE == already-installed ]; then

	# Force re-install
	if [ $1 == --f ]; then

		# Stop first
		bash stop

		# Restart Installation
		bash install
		exit

	fi


	# Start the server
	bash start
	exit

fi




# CHECK IP AND CREATE HOST
echo "Checking IP availability..."
COUNTER=2
while [  $COUNTER -lt 10 ]
do

	IP="127.0.0.${COUNTER}"


	echo "Checking '${IP}' availability..."
	if curl --max-time 3 --output /dev/null --silent --head --fail "${IP}"; then
		echo "${IP} - NOT AVAILABLE" >&2
	else
		echo "${IP} - AVAILABLE" >&2
		break
	fi


	let COUNTER=COUNTER+1
done

# Update the environment file (.env) with the available IP
sed -i "" "s/IP=127.0.0.1/IP=${IP}/g" .env;
echo -e "'${IP}' changed as '${IP}' on .env file ... ${GREEN}done${RESET}"


# Open that IP slot
ifconfig lo0 alias $IP up
echo -e "'${IP}' is now available to build server ... ${GREEN}done${RESET}"




# PREPARE THE STARTER TEMPLATE
if [ $MODE == install-starter ]; then


	# Theme folder name
	mv "wp-content/themes/site-name" "wp-content/themes/${SLUG}"
	echo -e "Theme folder name changed as '${SLUG}' ... ${GREEN}done${RESET}"


	# Theme function prefix changes
	sed -i "" "s/sitename/${PREFIX}/g" wp-content/themes/${SLUG}/functions.php;
	sed -i "" "s/sitename/${PREFIX}/g" wp-content/themes/${SLUG}/header.php;
	echo -e "Function prefixes changed as '${PREFIX}_' ... ${GREEN}done${RESET}"


	# Theme info changes
	sed -i "" "s/Site Name/${NAME}/g" wp-content/themes/${SLUG}/style.scss;
	sed -i "" "s/Site tagline/${DESC}/g" wp-content/themes/${SLUG}/style.scss;
	echo -e "Theme information updated as '${NAME}' ... ${GREEN}done${RESET}"


fi





# BUILD THE SERVER
echo "Server is building..."
docker-compose rm &&
docker-compose pull &&
docker-compose build --no-cache &&
docker-compose up -d --force-recreate


# Add the host to the /etc/hosts file
bash config/etc-hosts.sh -add $DOMAIN $IP
killall -HUP mDNSResponder


# Check MySQL to be ready
while ! docker exec ${PREFIX}_mysql mysqladmin --user=root --password=password --host "${IP}" ping --silent &> /dev/null ; do
	echo "Waiting for database connection..."
	sleep 3
done
echo -e "MySQL is ready! ... ${GREEN}done${RESET}"




# INSTALL NPM PACKAGES AND BUILD THE "style.css" FILE
if [ $MODE == install-starter ]; then


	# Install NPM packages
	echo "NPM packages installing..."
	docker-compose run --no-deps --rm nodejs bash -c "npm run-script build"
	echo -e "SCSS file built ... ${GREEN}done${RESET}"


fi




# DO THE WP WORKS
if [ $MODE == install-starter ] || [ $MODE == install-different-theme ]; then


	bash wp.sh
	source wp.sh


fi




# PRINT THE SITE INFO
echo ""
echo ""
echo "== Site Info ===================="
echo ""
echo "Admin Page: http://${DOMAIN}/wp-admin"

if [ $MODE == install-starter ] || [ $MODE == install-different-theme ]; then

	echo "Username: ${DEVELOPER_USERNAME}"
	echo "${ONLY_PASSWORD}"

fi

echo "IP: ${IP}"
echo ""
echo "================================="
echo ""
echo ""




# RUN THE GULP
if [ $MODE == install-starter ]; then


	echo "GULP is running..."
	docker-compose run --rm nodejs bash -c "npm start"


fi